//############################################################################################################//###################################### TODO - 2016-04-20 ###################################################//########## TODAS AS FUNCOES DO MOBILE DEVEM SER SETADAS NESTE ARQUIVO, QUE SERA INCLUIDO DINAMICAMENTE #####//########## E PODERA SER ACESSADA EXTERNAMENTE, NAO SERA COMPILADA NO APP                               #####//############################################################################################################//############################################################################################################$(document).ready(function () {	//Andre Renovato - 11/04/2016	//Gambi para remover attr de onclick do menu dashboards, por algum motivo existe chamadas para carregar	//os dashboards antes de logar, e neste caso o menu inclui um alert no botao dashboards e em outro momento	//inclui a lista de dashboards.    if($("#menu_dashboards").length > 0){        setTimeout(function(){            $("#menu_dashboards").removeAttr("onclick");            			//popMenuDash();            },6000);    }});//Calcula Total Despesafunction calcula_total_despesa() {    vlr_unitario = parseFloat($("#vlr_unitario").val().replace(',', '.'));    vlr_total = vlr_unitario * $("#qtde_despesa").val();    $("#valor_total").val(formatNumber(vlr_total, '.', 2, 2));}//funcao copiada de common_funcs.jsfunction elValueToCurrency(el, casas) {    var value = $(el).val();    if (value == '')        return false;    if (!casas)        casas = 2;    var new_value = _valueToCurrency(value, casas);    if (new_value == '') {        $(el).val('');        return false;    } else {        $(el).val(new_value);    }    return true;}//funcao copiada de common_funcs.jsfunction _valueToCurrency(value, casas) {    var first_char = value.charAt(0);    var accept = "0123456789,.";    //determinar se foi utilizado algum separador    var iof_ponto = value.indexOf('.');    var iof_virg = value.indexOf(',');    if (iof_ponto != -1 || iof_virg != -1) {        var num_pontos = value.replace(/[^\.]/g, '').length;        var num_virgs = value.replace(/[^\,]/g, '').length;        //se houve mais de uma instancia de um separador, deixar apenas a ultima        if (num_pontos > 1)            for (var i = 0; i < num_pontos - 1; i++)                value = remCharAt(value, value.indexOf('.'));        if (num_virgs > 1)            for (var i = 0; i < num_virgs - 1; i++)                value = remCharAt(value, value.indexOf(','));        //determinar a ultima posicao dos separadores        var iof_ponto = value.indexOf('.');        var iof_virg = value.indexOf(',');        var lenafter_ponto_str = value.substring(iof_ponto + 1);        var lenafter_ponto_len = lenafter_ponto_str.length;        var lenafter_virg_str = value.substring(iof_virg + 1);        var lenafter_virg_len = lenafter_virg_str.length;        if ((iof_ponto != -1 && iof_virg != -1) && (iof_ponto > iof_virg)) {            //ultimo ponto depois da ultima virgula, trocar os caracteres            value = value.replace(/\$|\./g, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz');            value = value.replace(/\$|\,/g, '.');            value = value.replace(/\$|ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz/g, ',');        }        if (iof_ponto != -1) {            if (iof_virg == -1 && lenafter_ponto_len > -1 && lenafter_ponto_len < 3) {                //tem ponto, nao tem virgula, e tem menos que 3 caracteres apos o ponto                //transformar o ponto em virgula                value = value.replace(/\$|\./g, ',');            } else if (iof_virg != -1 && iof_ponto != -1 && iof_virg > lenafter_ponto_str.indexOf(',')) {                //tem ponto e virgula, e a virgula esta entre o ponto e o fim da str                //nao fazer nada            }        } else {            if (iof_virg == -1 && lenafter_ponto_len > -1 && lenafter_ponto_len < 3) {                //tem ponto, nao tem virgula, e tem menos que 3 caracteres apos o ponto                //transformar o ponto em virgula                value = value.replace(/\$|\./g, ',');            } else if (iof_ponto != -1 && iof_ponto > lenafter_virg_str.indexOf('.')) {                //tem ponto e virgula, e o ponto esta entre a virgula e o fim da str                //nao fazer nada            }        }    }    var new_value = '';    for (var n = 0; n < value.length; n++) {        var current_char = value.charAt(n);        if (accept.indexOf(current_char) != -1) {            new_value += current_char;        }    }    new_value = strToCurrency(new_value, casas);    if (first_char == '-')        new_value = '-' + new_value;    return new_value;}//funcao copiada de common_funcs.jsfunction strToCurrency(strValue, casas){    if (typeof strValue == 'undefined' || strValue == '')        return '';    strValue = strValue.toString().replace(/\$|\./g, '');    if (strValue.indexOf(",") != -1) {        var strCents = strValue.substr(strValue.indexOf(",") + 1);        strValue = strValue.substr(0, strValue.indexOf(","));        if (strCents.length < casas) {            for (i = 0; i < Math.abs(casas - strCents.length); i++)                strCents += "0";        } else if (strCents.length > casas) {            strCents = strCents.substr(0, strCents.length - Math.abs(strCents.length - casas));        }    } else {        strCents = "00";    }    var dblValue = parseFloat(strValue);    var blnSign = (dblValue == (dblValue = Math.abs(dblValue)));    dblValue = Math.floor(dblValue * 100 + 0.50000000001);    dblValue = Math.floor(dblValue / 100).toString();    for (var i = 0; i < Math.floor((dblValue.length - (1 + i)) / 3); i++)        dblValue = dblValue.substring(0, dblValue.length - (4 * i + 3)) + '.' +                dblValue.substring(dblValue.length - (4 * i + 3));    return (((blnSign) ? '' : '-') + dblValue + ',' + strCents);}